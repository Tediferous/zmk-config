/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE   0
#define BUTTON 1
#define NAV    2
#define MOUSE  3
#define MEDIA  4
#define NUM    5
#define SYM    6
#define FUN    7


&lt { quick_tap_ms = <200>; };


/ {

          behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T   |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G   |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B   |   |  N  |  M   |  ,  |  .  |  /  |
//             | GUI | NAV | SHFT |   | SPC | SYM  | ALT |
                        bindings = <
                                      &kp Q &kp W &kp E &kp R &kp T          &kp Y &kp U &kp I &kp O &kp P             
                &hm LGUI A &hm LALT S &hm LCTRL D &hm LSHFT F &kp G          &kp H &hm LSHFT J &hm LCTRL K &hm LALT L &hm LGUI SQT      
                          &lt BUTTON Z &hm RALT X &kp C &kp V &kp B          &kp N &kp M &kp COMMA &hm RALT DOT &lt BUTTON SLASH  
                            &lt MEDIA ESC &lt NAV SPC &lt MOUSE TAB          &lt SYM RET &lt NUM BSPC &lt FUN DEL 
                        >;
                                    
                sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;

                };

                btn_layer {
                         bindings = <
        &kp K_UNDO &kp K_CUT &kp K_COPY &kp K_PASTE &kp K_REDO          &kp K_REDO &kp K_PASTE &kp K_COPY &kp K_CUT &kp K_UNDO             
                   &kp LGUI &kp LALT &kp LCTRL &kp LSHFT &none          &none &kp LSHFT &kp LCTRL &kp LALT  &kp LGUI  
        &kp K_UNDO &kp K_CUT &kp K_COPY &kp K_PASTE &kp K_REDO          &kp K_REDO &kp K_PASTE &kp K_COPY &kp K_CUT &kp K_UNDO 
                                          U_BTN2 U_BTN3 U_BTN1          U_BTN1 U_BTN3 U_BTN2   

            >;
                                    
                sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
                };


                nav_layer {
// -----------------------------------------------------------------------------------------
// |BTCLR|     | ESC |  ~   |     |   | TAB | HOME |  UP  | END | DEL  |
// | BT1 | GUI | ALT | CTRL | NUM |   |  /  | LEFT | DOWN | RGT | BKSP |
// | BT2 |     |     |      |     |   |  \  | ENT  |      |     |      |
//             |     |      |     |   |     |      |      |
                        bindings = <
                        &bootloader &none &none &none &none          &kp K_REDO &kp K_PASTE &kp K_COPY &kp K_CUT &kp K_UNDO             
                &kp LGUI &kp LALT &kp LCTRL &kp LSHFT &none          &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp CAPS  
                       &none  &kp RALT  &none  &none  &none          &kp HOME  &kp PG_DN &kp PG_UP &kp END &kp INS 
                                          &none &none &none          &kp RET &kp BSPC &kp DEL         

                        >;

                sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;

                };

                mouse_layer {
                        bindings = <
                        &bootloader &none &none &none &none          &kp K_REDO &kp K_PASTE &kp K_COPY &kp K_CUT &kp K_UNDO 
                      &kp LGUI &kp LALT &kp LCTRL &kp LSHFT          &none U_MS_L U_MS_D U_MS_U U_MS_R U_NU 
                           &none &kp RALT &none &none &none          U_WH_L U_WH_D U_WH_U U_WH_R U_NU 
                                          &none &none &none          U_BTN1 U_BTN3 U_BTN2       
                        >;

                sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;

                };

        

                media_layer {
                        bindings = <
                        &bootloader &none &none &none &none          &rgb_ug RGB_TOG &rgb_ug RGB_EFF &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_BRI 
                &kp LGUI &kp LALT &kp LCTRL &kp LSHFT &none          &kp C_PREV  &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT  &out OUT_TOG 
                           &none &kp RALT &none &none &none          &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_CLR  
                                          &none &none &none          &kp C_STOP  &kp C_PP &kp C_MUTE              
                        >;

                sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
                };
                

                num_layer {
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |   |  A  |  7  |  8  |  9  |  D  |
// |     |     |     |     |     |   |  B  |  4  |  5  |  6  |  E  |
// |     |     |     |     |     |   |  C  |  1  |  2  |  3  |  F  |
//             |     |     |     |   |  0  |  .  |     |
                        bindings = <
                   &kp LBKT &kp NUM_7 &kp NUM_8 &kp NUM_9 &kp RBKT          &none &none &none &none &bootloader   
                    &kp SEMI &kp NUM_4 &kp NUM_5 &kp NUM_6 &kp EQL          &none &kp LSHFT &kp LCTRL &kp LALT &kp LGUI 
                  &kp GRAVE &kp NUM_1 &kp NUM_2 &kp NUM_3 &kp BSLH          &none &none &none &kp RALT &none 
                                       &kp DOT &kp NUM_0 &kp MINUS          &none &none &none       

                        >;

                sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;

                };


                sym_layer {
// -----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
// |     |     |     |     |     |   |  -  |  =  |  {  |  }  | "|" |
// |     |     |     |     |     |   |  _  |  +  |  [  |  ]  |  \  |
//             | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
                        &kp LBRC &kp AMPS &kp ASTRK &kp LPAR &kp RBRC          &none &none &none &none &bootloader   
                        &kp COLON &kp DLLR &kp PRCT &kp CRRT &kp PLUS          &none &kp LSHFT &kp LCTRL &kp LALT &kp LGUI 
                          &kp TILDE &kp EXCL &kp AT &kp HASH &kp PIPE          &none &none &none &kp RALT &none 
                                          &kp LPAR &kp RPAR &kp UNDER          &none &none &none              

                        >;

                sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
                
                };

                fun_layer{
                          bindings = <
                        &kp F12 &kp F7 &kp F8 &kp F9 &kp PSCRN          &none &none &none &none &bootloader  
                         &kp F11 &kp F4 &kp F5 &kp F6 &kp SLCK          &none &kp LSHFT &kp LCTRL &kp LALT &kp LGUI 
                  &kp F10 &kp F1 &kp F2 &kp F3 &kp PAUSE_BREAK          &none &none &none &kp RALT &none 
                                     &kp K_APP &kp SPC &kp TAB          &none &none &none  

                        >;

                sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
                };

                
        };
};


