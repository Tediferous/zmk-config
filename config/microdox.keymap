/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE        0
#define CMK_DH      1
#define NAV         2
#define NUM         3
#define SYM         4
#define FUN         5
#define MEDIA       6

&lt {
  tapping-term-ms = <100>;
  quick-tap-ms = <200>;
  flavor = "hold-preferred";
};

&sk { // sticky key
  release-after-ms = <500>;
  quick-release;
};

/ {
  behaviors { 
    tdLGUI: tap_dance_LGUI {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_LGUI";
      #binding-cells = <0>;
      tapping-term-ms = <300>;
      bindings = <&kp LGUI>, <&kp LS(LGUI)>;
    };
  };

  combos {
    compatible = "zmk,combos";   

    toggle_cmk_dh {
      timeout-ms = <50>;
      key-positions=<0 1 8 9>;
      bindings=<&tog CMK_DH>;
    };

    fn_layer { 
      timeout-ms = <50>;
      key-positions=<30 31>;
      bindings=<&mo FUN>;
    }; 
    
    media_layer {
      timeout-ms = <50>;
      key-positions=<31 32>; 
      bindings=<&mo MEDIA>;
    };
    
    left_bspc {
      timeout-ms = <50>;
      key-positions=<0 10>;
      bindings=<&kp BSPC>;
    };

    lbkt {
      timeout-ms = <50>;
      key-positions=<1 11>; 
      bindings=<&kp LBKT>;
    };

    rbkt {
      timeout-ms = <50>;
      key-positions=<2 12>; 
      bindings=<&kp RBKT>;
    };

    tab {
      timeout-ms = <50>;
      key-positions=<3 13>;
      bindings=<&kp TAB>;
    };

    left {
      timeout-ms = <50>;
      key-positions=<11 21>; 
      bindings=<&kp LEFT>;
    };

    up {
      timeout-ms = <50>;
      key-positions=<12 22>; 
      bindings=<&kp UP>;
    };

    down {
      timeout-ms = <50>;
      key-positions=<13 23>; 
      bindings=<&kp DOWN>;
    };

    right {
      timeout-ms = <50>;
      key-positions=<14 24>; 
      bindings=<&kp RIGHT>;
    };

    caps { 
      timeout-ms = <50>;
      key-positions=<5 6>;
      bindings=<&kp CAPS>;
    };

    space { 
      timeout-ms = <50>;
      key-positions=<24 32>;
      bindings=<&kp SPACE>;
    };

    bpsc {
      timeout-ms = <50>;
      key-positions=<9 19>;
      bindings=<&kp BSPC>;
      };  

    semi_colon {
      timeout-ms = <50>;
      key-positions=<19 32>;
      bindings=<&kp SEMI>;
    };

    colon  {
      timeout-ms = <50>;
      key-positions=<10 19 32>;
      bindings=<&kp COLON>;
    };
  
    // modifiers
    l_shift {
      timeout-ms = <75>;
      key-positions = <20 21>;
      bindings = <&sk LSHFT>;
    };

    l_ctrl {
      timeout-ms = <50>;
      key-positions = <21 22>;
      bindings = <&sk LCTRL>;
    };

    l_gui {
      timeout-ms = <50>;
      key-positions = <22 23>;
      bindings = <&sk LGUI>;
    };

    l_alt {
      timeout-ms = <50>;
      key-positions = <23 24>;
      bindings = <&sk LALT>;
    };

    l_shift_pinky {
      timeout-ms = <75>;
      key-positions=<10 20>;
      bindings=<&kp LSHFT>;
    };

    r_gui_thumb {
      timeout-ms = <50>;
      key-positions = <33 34>;
      bindings = <&kp RGUI>;
    };

    r_shift_pinky {
      timeout-ms = <75>;
      key-positions=<19 29>;
      bindings=<&sk RSHFT>;
    };

    r_alt {
      timeout-ms = <50>;
      key-positions = <25 26>;
      bindings = <&sk RALT>;
    };

    r_gui {
      timeout-ms = <50>;
      key-positions = <26 27>;
      bindings = <&sk RGUI>;
    };

    r_ctrl {
      timeout-ms = <50>;
      key-positions = <27 28>;
      bindings = <&sk RCTRL>;
    };

    r_shift {
      timeout-ms = <75>;
      key-positions = <28 29>;
      bindings = <&sk RSHFT>;
    };
    
  };

    keymap {
      compatible = "zmk,keymap";
  layer0 {
          bindings = <
          &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P &mt LEFT_GUI A &mt LEFT_SHIFT S &mt LEFT_ALT D &mt LEFT_CONTROL F &kp G &kp H RCTL_T(KC_J) RALT_T(KC_K) RSFT_T(KC_L) RGUI_T(KC_SCLN) &kp Z &kp X &kp C &kp V &kp B &kp N &kp M &kp COMMA &kp DOT &kp SLASH &kp ESCAPE &kp SPACE &lt 1 BACKSPACE &lt 2 TAB &lt 4 ENTER &lt 3 DELETE
          >;
        };layer1 {
          bindings = <
          KC_EXLM KC_AT KC_HASH KC_DLR KC_PERC KC_CIRC KC_AMPR KC_ASTR &kp MINUS &kp EQUAL &kp LEFT_GUI &kp LEFT_SHIFT &kp LEFT_ALT &kp LEFT_CONTROL &kp F20 &kp GRAVE &kp SINGLE_QUOTE KC_PIPE KC_DQUO KC_COLN &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp LEFT_BRACKET &kp RIGHT_BRACKET KC_LPRN KC_RPRN &kp BACKSLASH &kp F20 &kp F20 &kp F20 &kp TAB &kp ENTER &kp DELETE
          >;
        };layer2 {
          bindings = <
          &kp K_CUT &kp K_COPY &kp K_PASTE KC_ACL0 KC_ACL2 &kp INSERT &kp H &kp J &kp K &kp L &kp FIND KC_MS_L KC_MS_D KC_MS_R &kp HOME &kp PAGE_UP KC_BTN1 KC_BTN2 KC_BTN3 &kp PRINTSCREEN &kp LEFT_GUI &kp LEFT_SHIFT &kp LEFT_ALT &kp LEFT_CONTROL &kp END &kp PAGE_DOWN &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp F20 &kp F20 KC_MS_U &kp F20 &kp F20 &kp F20
          >;
        };layer3 {
          bindings = <
          &kp F12 &kp F7 &kp F8 &kp F9 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F11 &kp F4 &kp F5 &kp F6 &kp F20 &kp F20 &kp RIGHT_CONTROL &kp RIGHT_ALT &kp RIGHT_SHIFT &kp RIGHT_GUI &kp F10 &kp F1 &kp F2 &kp F3 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp F20
          >;
        };layer4 {
          bindings = <
          &kp KP_ENTER &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_ASTERISK &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp KP_ASTERISK &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_PLUS &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp KP_SLASH &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_MINUS &kp F20 &kp F20 &kp F20 &kp F20 &kp F20 &kp KP_N0 &kp KP_DOT &kp KP_EQUAL &kp F20 &kp F20 &kp F20
          >;
        };
    };
};  


